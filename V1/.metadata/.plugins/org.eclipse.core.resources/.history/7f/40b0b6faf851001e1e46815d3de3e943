package com.ifs.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ifs.dto.AuthUser;
import com.ifs.dto.RequestDto;
import com.ifs.dto.ResponseDto;
import com.ifs.exception.InvalidAccessException;
import com.ifs.security.jwt.JwtService;
import com.ifs.service.UserService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("api/auth")
public class AuthController {
	
	@Autowired
	private UserService service;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private JwtService jwtService;
	
	@PostMapping("/create-user")
	public ResponseEntity<ResponseDto> createUser(@Valid @RequestBody RequestDto dto){
		ResponseDto user = service.createUser(dto);
		return new ResponseEntity<>(user, HttpStatus.CREATED);
	}
	
	@PostMapping("/authenticate")
	public String generateToken(@RequestBody AuthUser authUser) throws Exception  {

		Authentication authentication = authenticationManager.authenticate(
				new UsernamePasswordAuthenticationToken(authUser.getUserName(), authUser.getUserPassword()));
		
		
		if (authentication.isAuthenticated()) {
			return jwtService.generateToken(authUser.getUserName());	
		}
		else{
			throw new InvalidAccessException("Invalid Access");
		}
	}
}
