package com.ifs.gateway.filter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.stereotype.Component;

import com.google.common.net.HttpHeaders;
import com.ifs.gateway.exception.UnauthorizedAccessException;
import com.ifs.gateway.utils.JwtService;

@Component
public class RoleFilter extends AbstractGatewayFilterFactory<RoleFilter.ConfigDemo> {

	@Autowired
	private RouteValidator validator;

	@Autowired
	JwtService jwtService;

	public RoleFilter() {
		super(ConfigDemo.class);
	}

	public static class ConfigDemo {
	}

	@Override
	public RoleFilter apply(ConfigDemo config) {
		return ((exchange, chain) -> {
			System.out.println(validator.isSecuredHR.test(exchange.getRequest()));
			if (validator.isSecuredHR.test(exchange.getRequest())) {
				String token = exchange.getRequest().getHeaders().get(HttpHeaders.AUTHORIZATION).get(0).substring(7);

				if (!"ROLE_HR".equals(jwtService.getRole(token))) {
					throw new UnauthorizedAccessException("Unauthorized access to application");
				}
			}
			return chain.filter(exchange);
		});

	}

}
